[{"id":"4248dc1c.366e34","type":"ibmiot in","z":"84a370a3.f6a338","authentication":"apiKey","apiKey":"f73d01ad.5500a","inputType":"evt","deviceId":"","applicationId":"","deviceType":"iPhone","eventType":"+","commandType":"","format":"json","name":"IBM Watson IoT Platform","service":"registered","allDevices":true,"allApplications":"","allDeviceTypes":true,"allEvents":true,"allCommands":"","allFormats":"","qos":0,"x":128.57144165039062,"y":261,"wires":[["81bac59a.aefea","ea18b9c7.b4ff9","ac4369df.61445","5d59b4ad.2a3c3c","ca170cd8.afe0e"]]},{"id":"d9734db7.a90d78","type":"debug","z":"84a370a3.f6a338","name":"IoT Data to console","active":false,"console":"false","complete":"payload","x":857.3214111328125,"y":72.60712432861328,"wires":[]},{"id":"81bac59a.aefea","type":"function","z":"84a370a3.f6a338","name":"Parse IoT Data to string","func":"\nreturn {payload: JSON.stringify(msg)};","outputs":1,"noerr":0,"x":468.5714111328125,"y":73.85712432861328,"wires":[["d9734db7.a90d78"]]},{"id":"c1fe0dbe.185848","type":"ui_chart","z":"84a370a3.f6a338","name":"","group":"454ddf84.39791","order":2,"width":0,"height":0,"label":"Acceleration","chartType":"line","legend":"true","xformat":"auto","interpolate":"step","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"1","removeOlderPoints":"1000","removeOlderUnit":"60","cutout":0,"useOneColor":false,"colors":["#00b80a","#1a33ee","#ff0000","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"x":1545.535400390625,"y":324.9284973144531,"wires":[[],[]]},{"id":"ea18b9c7.b4ff9","type":"function","z":"84a370a3.f6a338","name":"Extract Gyroscope","func":"let gyroscopeX = {};\nlet gyroscopeY = {};\nlet gyroscopeZ = {};\nlet status = {};\nlet exception = null;\n\ngyroscopeX.payload = msg.payload.gyroscope.x;\ngyroscopeX.topic = \"x\";\n\ngyroscopeY.payload = msg.payload.gyroscope.y;\ngyroscopeY.topic = \"y\";\n\ngyroscopeZ.payload = msg.payload.gyroscope.z;\ngyroscopeZ.topic = \"z\";\n\n\n// die Gyroscopewerte auswerten\nconst min = -2;\nconst max = 2;\n\nif (gyroscopeX.payload < min || gyroscopeX.payload > max ||\n    gyroscopeY.payload < min || gyroscopeY.payload > max ||\n    gyroscopeZ.payload < min || gyroscopeZ.payload > max) {\n    status.payload = \"Incorrect handling\";\n    exception = {\n        message: \"Container handeled incorrectly.\",\n        deviceId: msg.deviceId,\n        time: msg.payload.gyroscope.time\n    };\n} else {\n  status.payload = \"Correct handling\";\n}\n\n\n// test if only exception data should be stored or if all the data should be stored\nif (flow.get(\"storeAllData\")) {\n    // all data\n    return [gyroscopeX, gyroscopeY, gyroscopeZ, status, exception];\n} else {\n    // only exception data\n    if (exception !== null) {\n        return [gyroscopeX, gyroscopeY, gyroscopeZ, status, exception];\n    } else {\n        return [null, null, null, status, null]\n    }\n}","outputs":"5","noerr":0,"x":448.5714416503906,"y":301,"wires":[[],[],[],[],["2744959e.a4714a","349192bd.50af5e"]],"inputLabels":["IoT Data"],"outputLabels":["gyroscopeX","gyroscopeY","gyroscopeZ","status","exception"]},{"id":"83157f03.2908f","type":"ui_chart","z":"84a370a3.f6a338","name":"","group":"454ddf84.39791","order":3,"width":0,"height":0,"label":"Gyroscope","chartType":"line","legend":"true","xformat":"auto","interpolate":"step","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"1","removeOlderPoints":"1000","removeOlderUnit":"60","cutout":0,"useOneColor":false,"colors":["#00b80a","#1a33ee","#ff0000","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"x":1545.892578125,"y":403.8570861816406,"wires":[[],[]]},{"id":"bd236a93.a7908","type":"worldmap","z":"84a370a3.f6a338","name":"Map (all devices)","lat":"","lon":"","zoom":"","layer":"OSM","cluster":"","maxage":"","usermenu":"show","layers":"show","panit":"true","x":1567.5001220703125,"y":524.2142333984375,"wires":[]},{"id":"ac4369df.61445","type":"function","z":"84a370a3.f6a338","name":"Extract Location","func":"let location = {};\n\nlocation.name = msg.deviceId;\nlocation.lat = msg.payload.geolocation.latitude;\nlocation.lon = msg.payload.geolocation.longitude;\nlocation.zoom = 15;\n\nreturn {payload: location};","outputs":1,"noerr":0,"x":447.3214111328125,"y":484.75,"wires":[["bd236a93.a7908"]]},{"id":"39ad7731.de4b","type":"comment","z":"84a370a3.f6a338","name":"Readme","info":"Das Dashboard kann unter \"/ui\" erreicht werden.\nDie Map mit allen IoT Geräten kann unter \"/worldmap\" eingesehen werden.\n\n\n\nIn den Templates können Angular/Angular-Material directives verwendet werden:\nhttps://material.angularjs.org/latest/api/directive/","x":78.57144165039062,"y":101,"wires":[]},{"id":"1ffab187.2ab3f6","type":"ui_template","z":"84a370a3.f6a338","group":"a5477cf0.866368","name":"Image","order":1,"width":"6","height":"8","format":"<img src=\"{{msg.payload.image}}\"\n alt='Image'\n width=\"200px\"\n>","storeOutMessages":false,"fwdInMessages":false,"templateScope":"local","x":1523.03564453125,"y":573.8570556640625,"wires":[[]]},{"id":"4d810bd4.a7fdfc","type":"http in","z":"84a370a3.f6a338","name":"Image Upload","url":"/image-upload","method":"post","upload":true,"swaggerDoc":"","x":88.57144165039062,"y":541,"wires":[["bfb7b1b2.591b68"]]},{"id":"6ef04f11.6933f","type":"ui_dropdown","z":"84a370a3.f6a338","name":"","label":"Select Device","place":"Select option","group":"e6349c96.a25878","order":1,"width":0,"height":0,"passthru":false,"options":[{"label":"Container-1","value":"Container-1","type":"str"},{"label":"Container-2","value":"Container-2","type":"str"},{"label":"Container-3","value":"Container-3","type":"str"}],"payload":"","topic":"","x":1831.9642333984375,"y":137.32147216796875,"wires":[["2d758921.aec4b6"]]},{"id":"169b4d8f.6965a2","type":"ui_template","z":"84a370a3.f6a338","group":"ba770d28.c7352","name":"Device Map","order":0,"width":"0","height":"0","format":"<iframe src=\"/worldmap\" height=600px ></iframe>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":1551.2501220703125,"y":485.9999084472656,"wires":[[]]},{"id":"554d4292.c83334","type":"ui_text","z":"84a370a3.f6a338","group":"e6349c96.a25878","order":2,"width":"5","height":"1","name":"Gyroscope Status","label":"Container Handling","format":"{{msg.payload}}","layout":"row-spread","x":1565.892578125,"y":443.8570861816406,"wires":[]},{"id":"ba2d74ac.9f8548","type":"ui_text","z":"84a370a3.f6a338","group":"e6349c96.a25878","order":3,"width":"5","height":"1","name":"Acceleration Status","label":"Container orientation","format":"{{msg.payload}}","layout":"row-spread","x":1565.7138671875,"y":364.03564453125,"wires":[]},{"id":"8c47cb8d.e56cf","type":"ui_template","z":"84a370a3.f6a338","group":"f9f8438f.ca7ce","name":"List of all exceptions","order":0,"width":"15","height":"12","format":"<md-list style>\n    <md-list-item class=\"md-3-line\" ng-repeat=\"exception in msg.exceptions | orderBy:'-time'\">\n        <img src=\"http://images.clipartpanda.com/exception-clipart-136637359138898496exception.svg\" class=\"md-avatar\"/>\n        <div class=\"md-list-item-text\">\n          <h3>{{exception.message}}</h3>\n          <a href=\"\" ng-click=\"send({payload:exception.deviceId}); location.reload();\"><h4>{{exception.deviceId}}</h4></a>\n          <p>\n            {{exception.timeString}}\n          </p>\n        </div>\n    </md-list-item>\n</md-list>","storeOutMessages":true,"fwdInMessages":false,"templateScope":"local","x":1569.28564453125,"y":136.3571319580078,"wires":[["6ef04f11.6933f","642a25eb.e814f4","2d758921.aec4b6"]]},{"id":"2744959e.a4714a","type":"function","z":"84a370a3.f6a338","name":"Store Container Exceptions","func":"// only if the exception includes a valid time it will be processed\nif (msg.time !== undefined) {\n    // get the current list of exceptions\n    let exceptions = flow.get(\"exceptions\") || []; \n    \n    \n    // retrieve privious message\n    let priviousMessage = flow.get(\"priviousMessage\") || null;\n    \n    // check if current message equals privious message\n    if (priviousMessage !== null && msg.message.localeCompare(priviousMessage.message) === 0 && msg.deviceId.localeCompare(priviousMessage.deviceId) === 0) {\n        // abroad exception\n        return [null, null];\n    } else {\n        // save current message as privious message\n        flow.set(\"priviousMessage\", msg)\n    }\n    \n    // add timeString to exception\n    msg.timeString = new Date(msg.time).toString();\n    \n    // add exception to global list of exceptions\n    exceptions.push(msg);\n    flow.set(\"exceptions\", exceptions);\n    \n    // prepare notification\n    let notification = {};\n    notification.topic = msg.deviceId + \": \" + msg.message;\n    \n    // send global list of exceptions and notification\n    return [{payload: exceptions}, notification];\n} else {\n    return [null, null];\n}","outputs":"2","noerr":0,"x":755.7144775390625,"y":272.24993896484375,"wires":[[],[]],"outputLabels":["list of exceptions","notification"]},{"id":"8e3dc0bf.4c7198","type":"ibmiot out","z":"84a370a3.f6a338","authentication":"apiKey","apiKey":"f73d01ad.5500a","outputType":"cmd","deviceId":"Container-2","deviceType":"container","eventCommandType":"takePicture","format":"json","data":"null","qos":0,"name":"Send TakePicture Command to IoT Device","service":"registered","x":2287.3214263916016,"y":713.5,"wires":[]},{"id":"bfb7b1b2.591b68","type":"http response","z":"84a370a3.f6a338","name":"Success Response","statusCode":"200","headers":{"Access-Control-Allow-Origin":"*"},"x":448.5714416503906,"y":581,"wires":[]},{"id":"54d72de7.67468c","type":"ui_button","z":"84a370a3.f6a338","name":"Take Picture Button","group":"a5477cf0.866368","order":0,"width":"6","height":"1","passthru":false,"label":"Take Picture","color":"","bgcolor":"","icon":"camera","payload":"true","payloadType":"bool","topic":"","x":1547.3214263916016,"y":713.5,"wires":[["76dafbfc.95189c"]]},{"id":"ced08e29.8b35d","type":"ui_ui_control","z":"84a370a3.f6a338","name":"Open Devices Tab","x":2036.9642333984375,"y":32.500030517578125,"wires":[[]]},{"id":"642a25eb.e814f4","type":"function","z":"84a370a3.f6a338","name":"Open Devices Tab","func":"// this function gets called if a message gets send by the priviouse node\n// the node \"List of all exceptions\" sends a message if a Container-ID form the list gets clicked\nreturn {payload:{tab:\"Devices\"}};","outputs":1,"noerr":0,"x":1828.2142333984375,"y":32.500030517578125,"wires":[["ced08e29.8b35d"]]},{"id":"76dafbfc.95189c","type":"function","z":"84a370a3.f6a338","name":"Set Device to request an image from","func":"// check if msg selects a new device or triggers the \"takePicture\" command\n// in order to trigger the \"takePicture command\"\nreturn {deviceId:flow.get(\"selectedDevice\")};","outputs":1,"noerr":0,"x":1887.3214263916016,"y":713.5,"wires":[["8e3dc0bf.4c7198"]]},{"id":"2d758921.aec4b6","type":"function","z":"84a370a3.f6a338","name":"Store currently selected device globally","func":"// Store currently selected device in flow-context\nflow.set(\"selectedDevice\", msg.payload);\n","outputs":1,"noerr":0,"x":2101.60693359375,"y":80.35714721679688,"wires":[[]]},{"id":"ba47a460.3764b8","type":"ui_switch","z":"84a370a3.f6a338","name":"","label":"Edge analytics","group":"454ddf84.39791","order":1,"width":0,"height":0,"passthru":false,"decouple":"false","topic":"","style":"","onvalue":"false","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"true","offvalueType":"bool","officon":"","offcolor":"","x":1537.3214263916016,"y":833.5,"wires":[["d1c947ab.06c8c"]]},{"id":"5d59b4ad.2a3c3c","type":"function","z":"84a370a3.f6a338","name":"Extract Acceleration","func":"let accelerationX = {};\nlet accelerationY = {};\nlet accelerationZ = {};\nlet status = {};\nlet exception = null;\n\naccelerationX.y = msg.payload.acceleration.x; \naccelerationX.x = msg.payload.acceleration.time;\n\naccelerationY.y = msg.payload.acceleration.y;\naccelerationY.x = msg.payload.acceleration.time;\n\naccelerationZ.y = msg.payload.acceleration.z;\naccelerationZ.x = msg.payload.acceleration.time;\n\n\n// die Accelerationwerte auswerten\nif (accelerationZ.y > 9) {\n   status.payload = \"Correct position\"; \n} else if (accelerationZ.y < -9) {\n    status.payload = \"Upside down\";\n    exception = {\n        message: \"Container lies upside down.\",\n        deviceId: msg.deviceId,\n        time: msg.payload.acceleration.time\n    };\n} else if (accelerationX.y > 9) {\n    status.payload = \"Left side down\";\n    exception = {\n        message: \"Container lies left side down.\",\n        deviceId: msg.deviceId,\n        time: msg.payload.acceleration.time\n    };\n} else if (accelerationX.y < -9) {\n    status.payload = \"Right side down\";\n    exception = {\n        message: \"Container lies right side down.\",\n        deviceId: msg.deviceId,\n        time: msg.payload.acceleration.time\n    };\n} else if (accelerationY.y > 9) {\n    status.payload = \"Turned forward\";\n    exception = {\n        message: \"Container is turned forward.\",\n        deviceId: msg.deviceId,\n        time: msg.payload.acceleration.time\n    };\n} else if (accelerationY.y < -9) {\n    status.payload = \"Turnend backwards\";\n    exception = {\n        message: \"Container is turnend backwards.\",\n        deviceId: msg.deviceId,\n        time: msg.payload.acceleration.time\n    };\n} else {\n    status.payload = \"No ground contact\";\n    exception = {\n        message: \"Container has no ground contact.\",\n        deviceId: msg.deviceId,\n        time: msg.payload.acceleration.time\n    };\n}\n\nlet accelerationDataOutput = {\n    \"accelerationData\": [accelerationX, accelerationY, accelerationZ],\n    \"deviceId\": msg.deviceId\n}\n\n// test if only exception data should be stored or if all the data should be stored\nif (flow.get(\"storeAllData\")) {\n    // all data\n    return [accelerationDataOutput, status, exception];\n} else {\n    // only exception data\n    if (exception !== null) {\n        return [accelerationDataOutput, status, exception];\n    } else {\n        return [null, status, null]\n    }\n}","outputs":"3","noerr":0,"x":458.5714416503906,"y":201,"wires":[["63ba15b5.d77ecc"],[],["349192bd.50af5e","2744959e.a4714a"]],"inputLabels":["IoT Data"],"outputLabels":["Acceleration Data","Status","Exception"]},{"id":"d1c947ab.06c8c","type":"function","z":"84a370a3.f6a338","name":"Store Data Volume Switch","func":"// Store currently selected device in flow-context\nflow.set(\"storeAllData\", msg.payload);","outputs":1,"noerr":0,"x":1827.3214263916016,"y":833.5,"wires":[[]]},{"id":"fba565d7.a10e5","type":"ui_button","z":"84a370a3.f6a338","name":"","group":"454ddf84.39791","order":4,"width":0,"height":0,"passthru":false,"label":"Clear Graphs","color":"","bgcolor":"","icon":"delete","payload":"[]","payloadType":"json","topic":"","x":1334.1070556640625,"y":369.2142333984375,"wires":[["c1fe0dbe.185848","83157f03.2908f"]]},{"id":"ca170cd8.afe0e","type":"function","z":"84a370a3.f6a338","name":"Store List of all IoT Devices","func":"let iotDevicesSet = flow.get(\"iotDevicesSet\") || new Set();\n\n// check if the IoT device is not added to the list yet\nif (!iotDevicesSet.has(iotDevicesSet.add)) {\n    // add it to the list\n    iotDevicesSet.add(msg.deviceId);\n    // update the list\n    flow.set(\"iotDevicesSet\", iotDevicesSet);\n}\n\nreturn null;","outputs":1,"noerr":0,"x":769.7142333984375,"y":126.39286804199219,"wires":[[]]},{"id":"e2f5f846.22ee08","type":"ui_template","z":"84a370a3.f6a338","group":"2372340f.4351dc","name":"List of all IoT Devices","order":0,"width":"6","height":"14","format":"<md-list style>\n    <md-list-item class=\"md-3-line\" ng-repeat=\"device in msg.listOfDevices\">\n        <img ng-hide=\"!msg.exceptionStatusOfDevices[device]\" src=\"http://www.greendothomer.org/wp-content/uploads/2014/03/bigreddot.png\" class=\"md-avatar\"/>\n        <img ng-hide=\"msg.exceptionStatusOfDevices[device]\" src=\"https://cdn-images-1.medium.com/max/512/1*nZ9VwHTLxAfNCuCjYAkajg.png\" class=\"md-avatar\"/>\n        <div class=\"md-list-item-text\">\n          <a href=\"\" ng-click=\"send({payload:device}); location.reload();\"><h3>{{device}}</h3></a>\n        </div>\n    </md-list-item>\n</md-list>","storeOutMessages":true,"fwdInMessages":false,"templateScope":"local","x":1569.75,"y":93,"wires":[["6ef04f11.6933f","642a25eb.e814f4","2d758921.aec4b6"]]},{"id":"281d664e.c3a362","type":"inject","z":"84a370a3.f6a338","name":"Remove all data","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":120.19999694824219,"y":692.7000122070312,"wires":[["f1d5b16a.f9f22"]]},{"id":"f1d5b16a.f9f22","type":"function","z":"84a370a3.f6a338","name":"Remove all data","func":"flow.set(\"exceptions\", undefined);\nflow.set(\"iotDeviceExceptionStatus\", undefined);\nflow.set(\"iotDevicesSet\", undefined);\nflow.set(\"selectedDevice\", undefined);\nflow.set(\"priviousMessage\", undefined);\nflow.set(\"accelerationData\", undefined);\nflow.set(\"exceptions\", undefined);\nflow.set(\"exceptions\", undefined);\nflow.set(\"exceptions\", undefined);\nflow.set(\"exceptions\", undefined);\n","outputs":1,"noerr":0,"x":354.1999969482422,"y":693.4000854492188,"wires":[[]]},{"id":"349192bd.50af5e","type":"function","z":"84a370a3.f6a338","name":"Store Exception status of all IoT devices","func":"// only if the exception includes a valid time it will be processed\nif (msg.time !== undefined) {\n    let iotDeviceExceptionStatus = flow.get(\"iotDeviceExceptionStatus\") || {};\n    \n    // update the status of the specific device\n    iotDeviceExceptionStatus[msg.deviceId] = true; \n    \n    // save the iotDeviceExceptionStatus data\n    flow.set(\"iotDeviceExceptionStatus\", iotDeviceExceptionStatus);\n    \n    return null;\n}","outputs":1,"noerr":0,"x":793.949951171875,"y":233.4357147216797,"wires":[[]]},{"id":"23ae7a85.b7f3b6","type":"ui_template","z":"84a370a3.f6a338","group":"e6349c96.a25878","name":"List of all exceptions of the current device","order":5,"width":"7","height":"7","format":"<md-list style>\n    <md-list-item class=\"md-3-line\" ng-repeat=\"exception in msg.exceptions | filter:msg.selectedDevice | orderBy:'-time'\">\n        <img src=\"http://images.clipartpanda.com/exception-clipart-136637359138898496exception.svg\" class=\"md-avatar\"/>\n        <div class=\"md-list-item-text\">\n          <h3>{{exception.message}}</h3>\n          <p>\n            {{exception.timeString}}\n          </p>\n        </div>\n    </md-list-item>\n</md-list>","storeOutMessages":true,"fwdInMessages":false,"templateScope":"local","x":1631.321533203125,"y":227.27854919433594,"wires":[[]]},{"id":"d3561b6.6f029e8","type":"ui_button","z":"84a370a3.f6a338","name":"","group":"e6349c96.a25878","order":6,"width":0,"height":0,"passthru":false,"label":"Clear Exceptions","color":"","bgcolor":"","icon":"delete","payload":"","payloadType":"str","topic":"","x":1560.592529296875,"y":270.6642150878906,"wires":[["f13183c6.ea168"]]},{"id":"50c80c16.e94754","type":"ui_text","z":"84a370a3.f6a338","group":"e6349c96.a25878","order":4,"width":"7","height":"1","name":"","label":"Exceptions:","format":"","layout":"row-spread","x":1546.4500122070312,"y":613.0500183105469,"wires":[]},{"id":"f05faed7.d1e9f8","type":"ui_text","z":"84a370a3.f6a338","group":"e6349c96.a25878","order":3,"width":"5","height":"1","name":"Exception status","label":"Exception status","format":"{{msg.payload}}","layout":"row-spread","x":1550.8499755859375,"y":651.9000244140625,"wires":[]},{"id":"f13183c6.ea168","type":"function","z":"84a370a3.f6a338","name":"Remove Exceptions of selected device and reset exception status","func":"let selectedDevice = flow.get(\"selectedDevice\");\n\n\n// delete exceptions of the selected device\nlet exceptions = flow.get(\"exceptions\");\n\nfor (let i = exceptions.length - 1; i >= 0; i--) {\n    if (exceptions[i].deviceId === selectedDevice) { \n        exceptions.splice(i, 1);\n    }\n}\n\nflow.set(\"exceptions\", exceptions);\n\n\n\n\n// reset exception status of the currently selected device\nlet iotDeviceExceptionStatus = flow.get(\"iotDeviceExceptionStatus\");\n\niotDeviceExceptionStatus[selectedDevice] = undefined;\n\nflow.set(\"iotDeviceExceptionStatus\", iotDeviceExceptionStatus);","outputs":1,"noerr":0,"x":1939.5924377441406,"y":270.7142333984375,"wires":[[]]},{"id":"3bf30c87.f938cc","type":"inject","z":"84a370a3.f6a338","name":"Reload UI","topic":"","payload":"","payloadType":"date","repeat":"1","crontab":"","once":true,"x":988.375,"y":314.0625,"wires":[["1d3dcc66.e064ac","8bb832b3.753668","d1a358ef.93505"]]},{"id":"1d3dcc66.e064ac","type":"function","z":"84a370a3.f6a338","name":"Load list of all devices","func":"\n\nreturn {\"listOfDevices\":Array.from(flow.get(\"iotDevicesSet\") || new Set()), \"exceptionStatusOfDevices\": flow.get(\"iotDeviceExceptionStatus\")};","outputs":1,"noerr":0,"x":1210.875,"y":94.93751525878906,"wires":[["e2f5f846.22ee08"]]},{"id":"8bb832b3.753668","type":"function","z":"84a370a3.f6a338","name":"Load list of all exceptions","func":"return {\n    \"exceptions\":flow.get(\"exceptions\"),\n    \"selectedDevice\":flow.get(\"selectedDevice\")\n};","outputs":1,"noerr":0,"x":1214.625,"y":159.93751525878906,"wires":[["8c47cb8d.e56cf","23ae7a85.b7f3b6"]]},{"id":"d1a358ef.93505","type":"function","z":"84a370a3.f6a338","name":"Load Acceleration Data of Selected Device","func":"let selectedDevice = flow.get(\"selectedDevice\");\nlet accelerationData = flow.get(\"accelerationData\");\n\nreturn {\"payload\":accelerationData[selectedDevice]};","outputs":1,"noerr":0,"x":1262.4286499023438,"y":320.2143249511719,"wires":[["c1fe0dbe.185848","8c89176f.b9b388"]]},{"id":"63ba15b5.d77ecc","type":"function","z":"84a370a3.f6a338","name":"Store Acceleration Data","func":"// get all the acceleration data\nlet accelerationData = flow.get(\"accelerationData\") || {};\n\n// if their is currently no data stored about the device, than the data has to be initialized\nif (accelerationData[msg.deviceId] === undefined) {\n    accelerationData[msg.deviceId] = [{\n        \"series\": [\"x\", \"y\", \"z\"],\n        \"data\": [],\n        \"labels\": [\"\"]\n    }]\n}\n\n// store the new data\naccelerationData[msg.deviceId][0].data.push(msg.accelerationData);\n\nflow.set(\"accelerationData\", accelerationData)\n\nreturn {\"payload\":JSON.stringify(accelerationData[msg.deviceId])};","outputs":1,"noerr":0,"x":742.4285278320312,"y":191.6428680419922,"wires":[[]]},{"id":"8c89176f.b9b388","type":"debug","z":"84a370a3.f6a338","name":"","active":true,"console":"false","complete":"true","x":1079.375,"y":419.375,"wires":[]},{"id":"f73d01ad.5500a","type":"ibmiot","z":"","name":"Dashboard API Key (rgiw9i)","keepalive":"60","serverName":"rgiw9i.messaging.internetofthings.ibmcloud.com","cleansession":true,"appId":"","shared":false},{"id":"454ddf84.39791","type":"ui_group","z":"","name":"IoT Device Data","tab":"c4a586b0.373ca","order":3,"disp":true,"width":"10"},{"id":"a5477cf0.866368","type":"ui_group","z":"","name":"Image","tab":"c4a586b0.373ca","order":2,"disp":true,"width":"6"},{"id":"e6349c96.a25878","type":"ui_group","z":"","name":"Device","tab":"c4a586b0.373ca","order":1,"disp":true,"width":"7"},{"id":"ba770d28.c7352","type":"ui_group","z":"","name":"Map","tab":"c4a586b0.373ca","order":4,"disp":true,"width":"6"},{"id":"f9f8438f.ca7ce","type":"ui_group","z":"","name":"List of all Exceptions","tab":"eb6cf29.8206e9","order":2,"disp":true,"width":"15"},{"id":"2372340f.4351dc","type":"ui_group","z":"","name":"Container Overview","tab":"eb6cf29.8206e9","order":1,"disp":true,"width":"6"},{"id":"c4a586b0.373ca","type":"ui_tab","z":"","name":"Devices","icon":"phone_iphone","order":2},{"id":"eb6cf29.8206e9","type":"ui_tab","z":"","name":"Home","icon":"home","order":1}]